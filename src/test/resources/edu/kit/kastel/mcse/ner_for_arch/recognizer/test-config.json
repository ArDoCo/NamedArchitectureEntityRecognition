[
  {
    "modelTimeoutSeconds": 120,
    "modelTemperature": 0.5,
    "testProject": "jabref",
    "prompt":{
      "type": "STRUCTURED_TEXT_OUTPUT_PROMPT",
      "first": "Your task is to analyze the input text (one sentence per line), to extract all architecturally relevant software architecture components, and return structured data on their mentions.\n\nInstructions:\n1. Component Identification:\nIdentify all explicitly named, architecturally relevant software components.\nFor each, choose the most descriptive and consistent name.\n2. Line-by-Line Analysis:\nFor each line (starting at line 1):\nEvery time a component is mentioned, output:\n\"<componentName>, <lineNumber>\"\ncomponentName: The most descriptive name of the component (consistent across all lines).\nlineNumber: The line in which the component is mentioned.\n3. Alternative Names:\nAfter all lines are processed, list alternative or ambiguous names for each component in the format:\n\"<componentName>: <alternativeName1>, <alternativeName2>, ...\"\n(If there are no alternative names for a component, write \"None\".)\n4. Final Consistency Check:\nEnsure:\nAll line numbers are correct.\nAll alternative names are properly listed.\n\nOutput Format:\nBEGIN-OUTPUT\nCOMPONENT entities recognized:\n<componentName>, <lineNumber>\n...\nAlternative names:\n<componentName>: <alternativeName1>, <alternativeName2>, ...\n...\nEND-OUTPUT\n\nUse this exact format. Do not add anything else.\n\nExample 1:\nText 1:\nThe AuthenticationService handles login requests.\nIt forwards valid credentials to the UserDatabase.\nThe service logs each attempt.\n\nOutput 1:\nBEGIN-OUTPUT\nCOMPONENT entities recognized:\nAuthenticationService, 1\nAuthenticationService, 2\nUserDatabase, 2\nAuthenticationService, 3\n\nAlternative names:\nAuthenticationService: service\nUserDatabase: None\nEND-OUTPUT\n\nExample 2:\nText 2:\nThe OrderService receives new orders from the web application.\nIt communicates with the InventoryManager to check stock levels.\nIf items are available, the PaymentProcessor is triggered to initiate payment.\nThe NotificationDispatcher then informs the customer via email.\nFinally, the AuditLogger records all actions for compliance purposes.\nThe logger stores the recordings in a file.\n\n\nOutput 2:\nBEGIN-OUTPUT\nCOMPONENT entities recognized:\nOrderService, 1\nOrderService, 2\nInventoryManager, 2\nPaymentProcessor, 3\nNotificationDispatcher, 4\nAuditLogger, 5\nAuditLogger, 6\n\nAlternative names:\nOrderService: None\nInventoryManager: None\nPaymentProcessor: None\nNotificationDispatcher: None\nAuditLogger: logger\nEND-OUTPUT"
    },
    "useGoldstandardComponentNames": true
  }
]